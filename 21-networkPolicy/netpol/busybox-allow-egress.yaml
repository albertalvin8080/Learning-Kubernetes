apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: busybox-allow-egress
  namespace: frontend
spec:
  podSelector: 
    matchLabels:
      app: busybox
  policyTypes:
  - Egress
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            # If you don't allow the pod to start traffic with the services of the kube-system, it obviously will not be able to use the necessary features to communicate with other pods.
            # ->> kubectl label namespace kube-system networking/namespace=kube-system
            # networking/namespace: kube-system 
            kubernetes.io/metadata.name: kube-system # Or you may just use the default label for kube-system namespace.
      - namespaceSelector:
          matchLabels:
            type: backend # Isolated for Egress for all Pods inside the `backend` namespace
      - namespaceSelector:
          matchLabels:
            type: production
        podSelector:
          matchExpressions:
            - key: spring-hello
              operator: Exists # Matches the pod just by having `spring-hello` as a key for a label.
              values: [] # Should be an empty array since `operator: Exists` is setted.
      ports:
        - protocol: TCP
          port: 8080 # Port mapped inside spring pod
        - protocol: TCP
          port: 80 # Port mapped inside nginx pod
        - protocol: TCP
          port: 53 # core-dns
        - protocol: UDP
          port: 53 # core-dns

# Explanation: This netpol will allow busybox to communicate with nginx and spring pods (and kube-system pods).

# kubectl apply -f busybox-allow-egress.yaml
# kubectl delete netpol -n frontend busybox-allow-egress

# kubectl get netpol -n frontend
# kubectl describe netpol -n frontend busybox-allow-egress

